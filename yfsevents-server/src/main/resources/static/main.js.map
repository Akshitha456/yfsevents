{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Email.ts","webpack:///./src/app/api.service.mail.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/college-registration/college-registration.component.css","webpack:///./src/app/college-registration/college-registration.component.html","webpack:///./src/app/college-registration/college-registration.component.ts","webpack:///./src/app/events/add-event.component.css","webpack:///./src/app/events/add-event.component.html","webpack:///./src/app/events/add-event.component.ts","webpack:///./src/app/events/event-list.component.html","webpack:///./src/app/events/event-list.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/inventory-data/inventory-data.component.css","webpack:///./src/app/inventory-data/inventory-data.component.html","webpack:///./src/app/inventory-data/inventory-data.component.ts","webpack:///./src/app/inventory-data/inventorydata.service.ts","webpack:///./src/app/partner-ngo/partner-ngo.component.css","webpack:///./src/app/partner-ngo/partner-ngo.component.html","webpack:///./src/app/partner-ngo/partner-ngo.component.ts","webpack:///./src/app/send-mail/send-mail.component.css","webpack:///./src/app/send-mail/send-mail.component.html","webpack:///./src/app/send-mail/send-mail.component.ts","webpack:///./src/app/volunteer/volunteer.component.css","webpack:///./src/app/volunteer/volunteer.component.html","webpack:///./src/app/volunteer/volunteer.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Email\n{\n  to:string;\n  cc:string;\n  bcc:string;\n  subject:string;\n  text:string;\n\n  constructor(values:Object={})\n  {\n    Object.assign(this,values);\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServiceMail {\n\n  private basicURL:string=\"/sendEmail\"\n\n  private urlList=new Map<string, string>();\n\n  constructor(private http:HttpClient) {\n    this.initialiseUrlList();\n  }\n\n  initialiseUrlList():void{\n    this.urlList.set('send', '/send');\n  }\n  postData(data, type:string){\n    console.log('postingggg', data);\n    this.http.post(this.basicURL+this.urlList.get(\"send\"),data).subscribe(response=>{\n      console.log('postResponse: ',response);\n      alert(\"Sucessfully Sent Email\");\n    });\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private basicURL:string=\"/api\"\n\n  private urlList=new Map<string, string>();\n\n  constructor(private http:HttpClient) {\n    this.initialiseUrlList();\n  }\n\n  initialiseUrlList():void{\n    this.urlList.set('partnerngo', '/partnerngo');\n    this.urlList.set('event','/event');\n    this.urlList.set('volunteer-create','/volunteer-create');\n    this.urlList.set('collegeregistration','/collegeregistration');\n  }\n  postData(data, type:string){\n    console.log('posting', data);\n    this.http.post(this.basicURL+this.urlList.get(type),data).subscribe(response=>{\n      console.log('postResponse: ',response);\n    });\n  }\n\n  getData(type){\n    this.http.get(this.basicURL+this.urlList.get(type)).subscribe(response=>{\n      console.log('getResponse: ',response);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PartnerNGOComponent } from './partner-ngo/partner-ngo.component';\nimport { EventListComponent } from './events/event-list.component';\nimport { AddEventComponent } from './events/add-event.component';\nimport {VolunteerComponent}  from './volunteer/volunteer.component';\nimport { InventoryDataComponent } from './inventory-data/inventory-data.component';\nimport { CollegeRegistrationComponent } from './college-registration/college-registration.component';\nimport {SendMailComponent} from \"./send-mail/send-mail.component\";\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst routes: Routes = [\n  {\n    path: 'collegeregistration', component: CollegeRegistrationComponent\n  },\n  {\n    path: 'inventorydata', component: InventoryDataComponent\n  },\n  {\n    path: 'partnerngo', component: PartnerNGOComponent\n  },\n  {path:'events',component:EventListComponent},\n  {path:'addevent',component:AddEventComponent},\n  {path:'volunteer-create',component:VolunteerComponent},\n  {\n    path:'email',component:SendMailComponent\n  },\n  {\n  \n    path: '**', component: WelcomeComponent\n    //to-do: update route\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header></header>\\n<div class=\\\"container\\\">\\n<router-outlet></router-outlet>\\n</div>\\n\\n\\n<!--<footer></footer>-->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Y4S';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PartnerNGOComponent } from './partner-ngo/partner-ngo.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule } from 'ngx-bootstrap';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { EventListComponent } from './events/event-list.component';\nimport { AddEventComponent } from './events/add-event.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { FormsModule } from '@angular/forms';\nimport { VolunteerComponent } from './volunteer/volunteer.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InventoryDataComponent } from './inventory-data/inventory-data.component';\nimport { CollegeRegistrationComponent } from './college-registration/college-registration.component';\nimport { SendMailComponent } from './send-mail/send-mail.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PartnerNGOComponent,\n    HeaderComponent,\n    FooterComponent,\n    EventListComponent,\n    AddEventComponent,\n    VolunteerComponent,\n    InventoryDataComponent,\n    CollegeRegistrationComponent,\n    SendMailComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AlertModule.forRoot(),\n    AgGridModule.withComponents([]),\n    BsDatepickerModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    TimepickerModule.forRoot(),\n    AngularMultiSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb2xsZWdlLXJlZ2lzdHJhdGlvbi9jb2xsZWdlLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well well-sm\\\">\\n    <h3><strong> College Registration</strong></h3>\\n  </div>\\n\\n  <form [formGroup]=\\\"collegeForm\\\">\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <label>About College</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"collegeDetails\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">College Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Registration Id</label>\\n                <input type=\\\"text\\\" formControlName=\\\"registrationId\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <label>Address</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"address\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Address Line 1</label>\\n                <input type=\\\"text\\\" formControlName=\\\"addressLine1\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Address Line 2</label>\\n                <input type=\\\"text\\\" formControlName=\\\"addressLine2\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">City</label>\\n                <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">State</label>\\n                <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Pincode</label>\\n                <input type=\\\"text\\\" formControlName=\\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <label>MOU Details</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <ul class=\\\"nav nav-tabs\\\" active=\\\"selectedTab\\\">\\n          <li class=\\\"nav active\\\" *ngIf=\\\"numberOfMOUs>0\\\"><a href=\\\"#tab0\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(1)\\\">MOU\\n              1</a></li>\\n          <li class=\\\"nav\\\" *ngFor=\\\"let num of getArray(numberOfMOUs-1); let i=index;\\\"><a href=\\\"#tab{{i+1}}\\\" data-toggle=\\\"tab\\\"\\n              (click)=\\\"activateTab(i+2)\\\">MOU {{i+2}}</a></li>\\n\\n          <div class=\\\"pull-right\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=addMOU() [disabled]=\\\"isMaxLimitReached(10)\\\">Add MOU</button>\\n            <button class=\\\"btn btn-primary\\\" (click)=removeMOU() >Remove MOU</button>\\n\\n          </div>\\n\\n        </ul>\\n\\n        <div class=\\\"tab-content\\\">\\n          <div formArrayName=\\\"mouDetails\\\">\\n            <div class=\\\"tab-pane\\\" *ngFor=\\\"let person of collegeForm.get('mouDetails').controls;let i=index\\\"\\n              formGroupName=\\\"{{i}}\\\" id=\\\"tab{{i}}\\\">\\n\\n              <div *ngIf=\\\"selectedTab==i\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">MOU ID</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"mouID\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">MOU Name</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"mouName\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Number Of Events Agreed</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"noOfEvents\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Valid From</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"fromDate\\\" class=\\\"form-control well well-sm\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Valid To</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"toDate\\\" class=\\\"form-control well well-sm\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Comments</label>\\n                      <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control well well-sm\\\"></textarea>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </form>\\n  <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-primary btn-sx\\\" (click)=\\\"onSubmit()\\\">Register</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit,Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-college-registration',\n  templateUrl: './college-registration.component.html',\n  styleUrls: ['./college-registration.component.css']\n})\nexport class CollegeRegistrationComponent  {\n  collegeForm: FormGroup;\n\n\n  private numberOfMOUs: number=0;\n  private selectedTab: number=-1;\n\n  constructor(private formBuilder: FormBuilder,\n              private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.collegeForm= this.formBuilder.group({\n      collegeDetails: this.collegeDetails(),\n      address: this.address(),\n      mouDetails: this.formBuilder.array([this.mouDetails()])\n    });\n    this.numberOfMOUs=this.getMOUDetails().length;\n    this.activateTab(this.numberOfMOUs);\n  }\n\n  collegeDetails(): FormGroup{\n    return this.formBuilder.group({\n      name: ['',[\n        Validators.required, Validators.maxLength(50)\n      ]],\n      registrationId: ['',[\n        Validators.maxLength(200)\n      ]],\n    });\n  }\n\n  address(): FormGroup{\n    return this.formBuilder.group({\n      addressLine1: ['', [\n        Validators.required, Validators.maxLength(2000)\n      ]],\n      addressLine2: ['', [\n        Validators.maxLength(2000)\n      ]],\n      state: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      city: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      pincode: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\n      ]]\n    });\n  }\n\n  mouDetails(): FormGroup{\n    return this.formBuilder.group({\n      mouID: ['',[\n        Validators.required, Validators.maxLength(200)\n      ]],\n      mouName: ['', [\n        Validators.required, Validators.maxLength(10)\n      ]],\n      noOfEvents: ['', [\n        Validators.required, Validators.maxLength(2)\n      ]],\n      fromDate: [],\n      toDate: [],\n      comments: ['', [\n        Validators.maxLength(200)\n      ]]\n    });\n  }\n\n  getMOUDetails(): FormArray{\n    return this.collegeForm.get('mouDetails') as FormArray;\n  }\n\n  addMOU():void{\n    if(this.numberOfMOUs<10){\n      (this.getMOUDetails()).push(this.mouDetails());\n      this.numberOfMOUs=this.getMOUDetails().length;\n    \n    }\n  }\n  removeMOU(): void{\n    if(this.numberOfMOUs>1){\n      (this.getMOUDetails()).removeAt(this.numberOfMOUs-1);\n      this.numberOfMOUs=this.getMOUDetails().length;\n      this.selectedTab=this.numberOfMOUs-1;\n    }\n  }\n\n  getNumberOfMOUs(): Number{\n    return this.numberOfMOUs;\n  }\n\n  isMaxLimitReached(val):boolean{\n    return this.numberOfMOUs>=val;\n  }\n\n  getArray(val): number[]{\n    return Array(val);\n  }\n\n  activateTab(val): void{\n      this.selectedTab=val-1;\n  }\n\n  onSubmit(){\n    console.log('inside method onsubmit');\n    let json= Object.assign({mouDetails:this.getMOUDetails().value}, this.collegeForm.get('collegeDetails').value, this.collegeForm.get('address').value);\n    console.log('submitting: ',json);\n    this.apiService.postData(json,'collegeregistration');\n    \n  }\n  \n\n}\n","module.exports = \".row {\\n    margin-bottom:25px;\\n}\\n\\n.itemsrow{\\n    margin-bottom:0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy9hZGQtZXZlbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLDRCQUE0QjtBQUNoQyIsImZpbGUiOiJldmVudHMvYWRkLWV2ZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcbiAgICBtYXJnaW4tYm90dG9tOjI1cHg7XG59XG5cbi5pdGVtc3Jvd3tcbiAgICBtYXJnaW4tYm90dG9tOjBweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"page-header well text-center well-sm\\\">\\n      <h3><strong> Event Registration</strong></h3>\\n    </div>\\n\\n    <form [formGroup]=\\\"eventForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n          \\n          <div class=\\\"row form-row\\\">\\n            <div class=\\\"col-md-6 offset-md-3 form-group\\\">\\n                <label class=\\\"control-label\\\">Event Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"eventName\\\" placeholder=\\\"Event Name\\\" class=\\\"form-control\\\">\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n                <label class=\\\"control-label\\\">Action</label>\\n                <select formControlName=\\\"eventAction\\\" class=\\\"form-control\\\">\\n                  <option *ngFor=\\\"let action of eventActions\\\" [value]=\\\"action\\\">{{action}}</option>\\n                </select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row form-row\\\">\\n            <div class=\\\"col-md-6 offset-md-3 form-group\\\">\\n                <label class=\\\"control-label\\\">PartnerNGO Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"ngoName\\\" placeholder=\\\"PartnerNGO Name\\\" class=\\\"form-control\\\">\\n            </div>\\n            <div class=\\\"col-md-4 form-group\\\">\\n                <label class=\\\"control-label\\\">Category</label>\\n                <select formControlName=\\\"eventCategory\\\" class=\\\"form-control\\\">\\n                  <option *ngFor=\\\"let category of eventCategories\\\" [value]=\\\"category\\\">{{category}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"col-md-2 form-group\\\">\\n              <label class=\\\"control-label\\\">Recurring Event:</label>\\n              <select formControlName=\\\"recurringEvent\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let value of recurringEventOptions\\\" [value]=\\\"value\\\">{{value}}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n            <div class=\\\"row form-row itemsrow\\\">\\n              <div class=\\\"col-md-6 offset-md-3 form-group\\\">\\n                <label for=\\\"datepicker\\\">Select Date & Time Range</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"datepicker\\\" formControlName=\\\"eventDuration\\\" bsDaterangepicker/>\\n              </div>\\n              <div class=\\\"col-md-3 form-group\\\">\\n                <timepicker [formControlName]=\\\"'fromTime'\\\">\\n                  </timepicker>\\n              </div>\\n              <div class=\\\"col-md-3 form-group\\\">\\n                <timepicker [formControlName]=\\\"'toTime'\\\"></timepicker>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row form-row\\\">\\n              <div class=\\\"col-md-9 offset-md-3 form-group\\\">\\n                <label class=\\\"control-label\\\">Items Required:</label>\\n                <angular2-multiselect [data]=\\\"itemList\\\" [settings]=\\\"settings\\\" \\n                  (onSelect)=\\\"log($event)\\\"\\n                  (onDeSelect)=\\\"log($event)\\\" \\n                  (onSelectAll)=\\\"log($event)\\\" \\n                  (onDeSelectAll)=\\\"log($event)\\\" formControlName=\\\"items\\\">\\n                </angular2-multiselect>\\n              </div>\\n              <div class=\\\"col-md-3  form-group\\\">\\n                  <label class=\\\"control-label\\\">No. of Volunteers</label>\\n                  <input type=\\\"text\\\" formControlName=\\\"volunteers\\\" placeholder=\\\"Number of Volunteers\\\" class=\\\"form-control\\\">\\n              </div>\\n            </div>\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" [disabled]=\\\"eventForm.pristine\\\">Save</button>\\n    </form>\\n</div>  \\n\\n\\n\\n\\n\\n<!-- <form >\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"col-md-1\\\"></div>\\n          <div class=\\\"form-group col-md-5\\\">\\n            <label for=\\\"eventname\\\">Event Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"eventname\\\" placeholder=\\\"Name\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"eventaction\\\">Action</label>\\n                <select id=\\\"eventaction\\\" class=\\\"form-control\\\">\\n                  <option selected>Choose...</option>\\n                  <option>Not Started</option>\\n                  <option>In progress</option>\\n                  <option>completed</option>\\n                  <option>Abandoned</option>\\n                </select>\\n          </div>\\n          <div class=\\\"col-md-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-1\\\"></div>\\n              <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"ngoname\\\">Partner Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ngoname\\\" placeholder=\\\"NGO Name\\\" >\\n              </div>\\n              <div class=\\\"form-group col-md-5\\\">\\n                    <label for=\\\"eventcategory\\\">Event category</label>\\n                    <select id=\\\"eventcategory\\\" class=\\\"form-control\\\">\\n                      <option selected>Choose...</option>\\n                      <option>Not Started</option>\\n                      <option>In progress</option>\\n                      <option>completed</option>\\n                      <option>Abandoned</option>\\n                    </select>\\n              </div>\\n              <div class=\\\"col-md-1\\\"></div>\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-1\\\"></div>\\n            <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"datepicker\\\">Select Date Range</label>\\n                <input id=\\\"datepicker\\\" class=\\\"form-control\\\"\\n                bsDaterangepicker [(ngModel)]=\\\"bsRangeValue\\\" >\\n            </div>\\n            <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"eventaction\\\">Recurring Event</label>\\n                <select id=\\\"eventaction\\\" class=\\\"form-control\\\">\\n                  <option selected>No</option>\\n                  <option>Yes</option>\\n                </select>\\n            </div>\\n            <div class=\\\"col-md-1\\\"></div>\\n          </div>\\n\\n\\n        \\n\\n            \\n</form> -->\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { ApiService } from '../api.service';\n\n@Component({\n    selector:'add-event',\n    templateUrl: './add-event.component.html',\n    styleUrls: ['./add-event.component.css']\n  })\n\n  export class AddEventComponent implements OnInit{\n    eventForm :FormGroup;\n    bsValue = new Date();\n    bsRangeValue: Date[];\n    maxDate = new Date();\n    eventData = new Eventdata();\n    itemList = [];\n    selectedItems = [];\n    settings={};\n    eventActions: string[] = ['Not Started','In progress','Completed','Abandoned'];\n    eventCategories: string[] = ['PartnerNGO','Education','Environment','Health','Other'];\n    recurringEventOptions: string[] = ['Yes','No'];\n    constructor(private formBuilder: FormBuilder,private apiService: ApiService) {\n      this.eventForm=this.formBuilder.group({\n        eventName: '',\n        eventAction: 'Not Started',\n        eventDuration:null,\n        fromTime: new Date(),\n        toTime: new Date(),\n        ngoName:'',\n        eventCategory:'',\n        recurringEvent:'No',\n        items:[],\n        volunteers: ''\n      });\n    }\n   \n  \n    ngOnInit(){ \n      this.itemList = [\n        { \"id\": 1, \"itemName\": \"Item1\" },\n        { \"id\": 2, \"itemName\": \"Item2\" },\n        { \"id\": 3, \"itemName\": \"Item3\" },\n        { \"id\": 4, \"itemName\": \"Item4\" },\n        { \"id\": 5, \"itemName\": \"Item5\" },\n        { \"id\": 6, \"itemName\": \"Item6\" }\n    ];\n    this.selectedItems = [];\n    this.settings = {\n      singleSelection: false,\n        text: \"Select Items\",\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        enableSearchFilter: true\n    };\n\n  }\n  \n  log($event){\n    console.log(\"hi\");\n  }\n\n  onSubmit():void{\n    console.log(this.eventForm.value);\n    this.eventData.eventName= this.eventForm.value.eventName;\n    this.eventData.eventAction=this.eventForm.value.eventAction;\n    this.eventData.eventfromTime= formatDate(this.eventForm.value.fromTime,'shortTime','en-US');\n    this.eventData.eventtoTime = formatDate(this.eventForm.value.toTime,'shortTime','en-US');\n    this.eventData.ngoName = this.eventForm.value.ngoName;\n    this.eventData.volunteers = this.eventForm.value.volunteers;\n    this.eventData.recurringEvent=this.eventForm.value.recurringEvent;\n    // this.eventData.eventDuration=[];\n    // this.eventData.eventDuration.push(formatDate(this.eventForm.value.eventDuration[0],'fullDate','en-US'));\n    // this.eventData.eventDuration.push(formatDate(this.eventForm.value.eventDuration[1],'fullDate','en-US'));\n    this.eventData.eventDuration=this.eventForm.value.eventDuration.map(date=>formatDate(date,'fullDate','en-US'));\n    this.eventData.eventItems=this.eventForm.value.items.map(item => item.itemName);\n    console.log(this.eventData);\n    this.apiService.postData(this.eventData,'event')\n  }\n\n  \n\n}\n\n\nexport class Eventdata {\n  eventName:string;\n  eventAction:string;\n  eventfromTime:string;\n  eventtoTime:string;\n  ngoName:string;\n  eventCategory: string;\n  recurringEvent:string;\n  volunteers:string;\n  eventDuration:string[];\n  eventItems:string[];\n\n}","module.exports = \"\\n<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n<div class=\\\"col-md-1\\\">\\n\\n</div>\\n\\n<div class=\\\"col-md-10\\\">\\n        <div id=\\\"myGrid\\\"  style=\\\"width: 100%; height: 100%;\\\">\\n<ag-grid-angular \\n    class=\\\"ag-theme-balham\\\"\\n    [rowData]=\\\"rowData\\\" \\n    [columnDefs]=\\\"columnDefs\\\"\\n    >\\n</ag-grid-angular>\\n</div>\\n</div>\\n<div class=\\\"col-md-1\\\">\\n    \\n</div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector:'event-list',\n  templateUrl: './event-list.component.html'\n})\n\n\nexport class EventListComponent implements OnInit{\n\n\tcolumnDefs = [\n        {headerName: 'EventId', field: 'event_id',filter:true },\n        {headerName: 'Action', field: 'action',filter:true},\n        {headerName: 'Event Name', field: 'event_name',filter:true},\n        {headerName: 'Event Category', field: 'event_category',filter:true},\n        {headerName: 'Partner NGO', field: 'ngo_name',filter:true},\n        {headerName: 'Event Start Date', field: 'event_start_date',filter:true},\n        {headerName: 'Event End Date', field: 'event_end_date',filter:true},\n        \n    ];\n\n    rowData = [\n        { event_id: '1001', action: 'Not Started', event_name: 'ABC', event_category :'Partner NGO',ngo_name:'XYZ',event_start_date:'15/2/2019',event_end_date:'17/2/2019' },\n    \n    ];\n\t\n\n\tngOnInit():void{\n\n\t}\n}","module.exports = \".footer{\\n    background-color: #2d2d30;\\n    color: #d5d5d5 !important;\\n    letter-spacing: 4px;\\n    opacity: 0.9;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEIiLCJmaWxlIjoiZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3RlcntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQyZDMwO1xuICAgIGNvbG9yOiAjZDVkNWQ1ICFpbXBvcnRhbnQ7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDRweDtcbiAgICBvcGFjaXR5OiAwLjk7XG59Il19 */\"","module.exports = \"<div class=\\\"text-center footer\\\">\\n    <!--ToDo: Add go to Top Logic on Button Click\\n    >a class=\\\"up-arrow\\\" href=\\\"\\\" data-toggle=\\\"tooltip\\\" title=\\\"TO TOP\\\">\\n      <span class=\\\"glyphicon glyphicon-chevron-up\\\"></span>\\n    </a><br><br-->\\n    <!--TODO: Add below?-->\\n    <p>Made by <strong></strong></p>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".nav-tabs li a {\\n    color: #777;\\n  }\\n  \\n  .navbar {\\n    font-family: Montserrat, sans-serif;\\n    margin-bottom: 0;\\n    border: 0;\\n    font-size: 15px !important;\\n    letter-spacing: 4px;\\n    opacity: 0.9;\\n  }\\n  \\n  .navbar li a, .navbar .navbar-brand { \\n    color: #d5d5d5 !important;\\n  }\\n  \\n  .navbar-nav li a:hover {\\n    color: #fff !important;\\n  }\\n  \\n  .navbar-nav li.active a {\\n    color: #fff !important;\\n    background-color: #2b2c29 !important;\\n  }\\n  \\n  .navbar-default .navbar-toggle {\\n    border-color: transparent;\\n  }\\n  \\n  .open .dropdown-toggle {\\n    color: #fff;\\n  }\\n  \\n  .dropdown-menu li a {\\n    color: #000 !important;\\n  }\\n  \\n  .dropdown-menu li a:hover {\\n    background-color: red !important;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7RUFDYjs7RUFFQTtJQUNFLG1DQUFtQztJQUNuQyxnQkFBZ0I7SUFDaEIsU0FBUztJQUNULDBCQUEwQjtJQUMxQixtQkFBbUI7SUFDbkIsWUFBWTtFQUNkOztFQUNBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUNBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUNBO0lBQ0Usc0JBQXNCO0lBQ3RCLG9DQUFvQztFQUN0Qzs7RUFDQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFDQTtJQUNFLFdBQVc7RUFDYjs7RUFDQTtJQUNFLHNCQUFzQjtFQUN4Qjs7RUFDQTtJQUNFLGdDQUFnQztFQUNsQyIsImZpbGUiOiJoZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2LXRhYnMgbGkgYSB7XG4gICAgY29sb3I6ICM3Nzc7XG4gIH1cbiAgXG4gIC5uYXZiYXIge1xuICAgIGZvbnQtZmFtaWx5OiBNb250c2VycmF0LCBzYW5zLXNlcmlmO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xuICAgIGxldHRlci1zcGFjaW5nOiA0cHg7XG4gICAgb3BhY2l0eTogMC45O1xuICB9XG4gIC5uYXZiYXIgbGkgYSwgLm5hdmJhciAubmF2YmFyLWJyYW5kIHsgXG4gICAgY29sb3I6ICNkNWQ1ZDUgIWltcG9ydGFudDtcbiAgfVxuICAubmF2YmFyLW5hdiBsaSBhOmhvdmVyIHtcbiAgICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuICB9XG4gIC5uYXZiYXItbmF2IGxpLmFjdGl2ZSBhIHtcbiAgICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYjJjMjkgIWltcG9ydGFudDtcbiAgfVxuICAubmF2YmFyLWRlZmF1bHQgLm5hdmJhci10b2dnbGUge1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgLm9wZW4gLmRyb3Bkb3duLXRvZ2dsZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmRyb3Bkb3duLW1lbnUgbGkgYSB7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgfVxuICAuZHJvcGRvd24tbWVudSBsaSBhOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQgIWltcG9ydGFudDtcbiAgfVxuICAiXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" style=\\\"background-color: #ba2a29;margin-bottom:20px;\\\">\\n    <div class=\\\"container-fluid\\\"> \\n      \\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"height:70px\\\">\\n          <img src=\\\"/assets/youth-for-seva.png\\\" style=\\\"height:50px\\\">\\n        </a>\\n      \\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right text-white\\\" style=\\\"margin-top:12px;\\\">\\n          <li><a href=\\\"\\\">HOME</a></li>\\n          <li class=\\\"dropdown\\\">\\n            <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">REGISTER\\n            <span class=\\\"caret\\\"></span></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a [routerLink]=\\\"['/partnerngo']\\\">Partner NGO</a></li>\\n              <li><a [routerLink]=\\\"['/volunteer-create']\\\">Volunteer</a></li>\\n              <li><a [routerLink]=\\\"\\\">College</a></li> \\n            </ul>\\n          </li>\\n          <li><a [routerLink]=\\\"['/events']\\\">EVENTS</a></li>\\n          <li><a [routerLink]=\\\"\\\">CONTACT</a></li>\\n          <li><a [routerLink]=\\\"\\\"><span class=\\\"glyphicon glyphicon-search\\\"></span></a></li>\\n        </ul>\\n      </div> \\n    </div>\\n  </nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcnktZGF0YS9pbnZlbnRvcnktZGF0YS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well well-sm\\\">\\n    <h3><strong> Inventory Data</strong></h3>\\n  </div>\\n  <form [formGroup]=\\\"inventoryData\\\">\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">ItemName</label>\\n              <input type=\\\"text\\\" formControlName=\\\"itemName\\\" class=\\\"form-control well well-sm\\\" required>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">EventCategory</label>\\n              <div>\\n                <select [(ngModel)]=\\\"selected\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control well well-sm\\\" required>\\n                  <option *ngFor=\\\"let evCat of eventCategory\\\" [(ngValue)]=\\\"evCat.value\\\">{{evCat.value}}</option>\\n                </select>          \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Comments</label>\\n              <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control well well-sm\\\"></textarea>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n  <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-primary btn-sx\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { InventorydataService } from './inventorydata.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-inventory-data',\n  templateUrl: './inventory-data.component.html',\n  styleUrls: ['./inventory-data.component.css']\n})\nexport class InventoryDataComponent implements OnInit {\n  inventoryData: FormGroup;\n  eventCategory:any[];\n  selected:any;\n  constructor(private formBuilder: FormBuilder,private inventoryService:InventorydataService) { }\n\n  ngOnInit() {\n\n    this.inventoryData = this.formBuilder.group({\n      itemName: ['',[\n        Validators.required, Validators.maxLength(50)\n      ]],\n      eventCategory: [''],\n      comments:['',[\n        Validators.required, Validators.maxLength(200)\n      ]],\n      \n    });\n\n    this.inventoryService.getEventCategoryList().subscribe((data:any) =>\n    {\n      this.eventCategory= data;\n    },( err:HttpErrorResponse)=>{\n       console.log(err.message);\n    })\n\n   \n\n  }\n\n  onSubmit(){\n    console.log(this.selected);\n    const data=Object.assign({},this.inventoryData.getRawValue(),{eventCategory:this.selected});\n    console.log(this.inventoryData.getRawValue());\n    console.log(data);\n    this.inventoryService.saveInventoryData(data);\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventorydataService {\n\n  constructor(private http:HttpClient) { }\n\n  saveInventoryData(data:any){\n    this.http.post(`${environment.serverHost}/inventorydata/list`,data).subscribe(response=>{\n      console.log('response: ',response);\n    });\n  }\n\n  getInventoryData(){\n    this.http.get(`${environment.serverHost}/inventorydata/list`);\n  }\n\n  getEventCategoryList(){\n    return this.http.get(`${environment.serverHost}/inventorydata/eventcategory`);\n  }\n  \n \n   \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXJ0bmVyLW5nby9wYXJ0bmVyLW5nby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!doctype html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1 user-scalable=no\\\">\\n  </head>\\n\\n  <body>\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page-header well well-sm\\\">\\n        <h3><strong> Partner NGO Registration</strong></h3>\\n      </div>\\n      \\n      <form [formGroup]=\\\"myForm\\\">\\n        <!-- ToDo: Decrease space between the table rows-->\\n        <div class=\\\"panel panel-info\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <label>Basic Information</label>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <div formGroupName=\\\"basicInfo\\\">\\n              <!-- <table class=\\\"form-table\\\"> -->\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Name</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"name\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Description</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"description\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Branch</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"branch\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Registration Number</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"registrationNumber\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n              <!-- </table>               -->\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"panel panel-info\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <label>Address</label>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <div formGroupName=\\\"address\\\">\\n              <!-- <table class=\\\"form-table\\\"> -->\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Address Line 1</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"addressLine1\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Address Line 2</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"addressLine2\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">City</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">State</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Pincode</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                  </div>\\n                </div>\\n              <!-- </table>               -->\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"panel panel-info\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <label>Authorised Persons</label>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <ul class=\\\"nav nav-tabs\\\" active=\\\"selectedTab\\\">\\n              <li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorisedPersons>0\\\"><a href=\\\"#tab0\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(1)\\\">Person 1</a></li>\\n              <li class=\\\"nav\\\" *ngFor=\\\"let num of getArray(numberOfAuthorisedPersons-1); let i=index;\\\"><a href=\\\"#tab{{i+1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(i+2)\\\">Person {{i+2}}</a></li>\\n              <!--li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorisedPersons>0\\\"><a href=\\\"#tab{{numberOfAuthorisedPersons-1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(numberOfAuthorisedPersons)\\\">Person {{numberOfAuthorisedPersons}}</a></li-->\\n              <!--li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorisedPersons>0\\\"><a href=\\\"#tab{{numberOfAuthorisedPersons-1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"selectedTab=i\\\">Person {{numberOfAuthorisedPersons}}</a></li-->\\n              <div class=\\\"pull-right\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"addAuthorisedPerson()\\\" [disabled]=\\\"isMaxLimitReached(5)\\\">Add Person</button>\\n                <!-- <button class=\\\"btn btn-primary\\\" (click)=removeAuthorisedPerson() [disabled]=\\\"numberOfAuthorisedPersons\\\">Remove Person</button> -->\\n              </div>\\n              <!--ToDo: Setup dynamic Tab Creation and Add Delete button-->\\n            </ul>\\n\\n            <div class=\\\"tab-content\\\">\\n              <div formArrayName=\\\"authorisedPersons\\\">\\n                <!--ToDo: NgFor not working: Check-->\\n                <div class=\\\"tab-pane\\\" *ngFor=\\\"let person of myForm.get('authorisedPersons').controls;let i=index\\\" formGroupName=\\\"{{i}}\\\" id=\\\"tab{{i}}\\\">\\n                  <!-- <table class=\\\"form-table\\\"> -->\\n                  <div *ngIf=\\\"selectedTab==i\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label\\\">Name</label>\\n                          <input type=\\\"text\\\" formControlName = \\\"name\\\" class=\\\"form-control well well-sm\\\">\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label\\\">Contact Details</label>\\n                          <input type=\\\"text\\\" formControlName = \\\"contact1\\\" class=\\\"form-control well well-sm\\\">\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label\\\">Alternate Contact Details</label>\\n                          <input type=\\\"text\\\" formControlName = \\\"contact2\\\" class=\\\"form-control well well-sm\\\">\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 offset-md-3\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label class=\\\"control-label\\\">Email ID</label>\\n                            <input type=\\\"text\\\" formControlName = \\\"email1\\\" class=\\\"form-control well well-sm\\\">\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-md-6 offset-md-3\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label class=\\\"control-label\\\">Alternate Email ID</label>\\n                            <input type=\\\"text\\\" formControlName = \\\"email2\\\" class=\\\"form-control well well-sm\\\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  <!-- </table>               -->\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </form>\\n      <!--<span>{{myForm.value | json}}</span>-->\\n      <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"onSubmit()\\\">Register</button>\\n    </div>\\n\\n  </body>\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormsModule, FormGroup, FormControl, Validators, FormBuilder, FormArray }  from '@angular/forms';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-partner-ngo',\n  templateUrl: './partner-ngo.component.html',\n  styleUrls: ['./partner-ngo.component.css']\n})\nexport class PartnerNGOComponent implements OnInit {\n\n  myForm: FormGroup;\n\n  private numberOfAuthorisedPersons: number=0;\n  private selectedTab: number=-1;\n\n  constructor(private formBuilder: FormBuilder,\n              private apiService: ApiService) { }\n\n  ngOnInit() {\n    console.log('Loading PartnerNgo Screen');\n    this.myForm = this.formBuilder.group({\n      basicInfo: this.partnerNgoGroup(),\n      address: this.address(),\n      authorisedPersons: this.formBuilder.array([this.authorisedPerson()])\n    });\n    this.numberOfAuthorisedPersons=this.getAuthorisedPersons().length;\n    this.activateTab(this.numberOfAuthorisedPersons);\n  }\n\n  partnerNgoGroup(): FormGroup{\n    return this.formBuilder.group({\n      name: ['',[\n        Validators.required, Validators.maxLength(200)\n      ]],\n      description: ['',[\n        Validators.maxLength(200)\n      ]],\n      branch: ['',[\n        Validators.maxLength(200)\n      ]],\n      registrationNumber: ['', [\n        Validators.maxLength(200)\n      ]]\n      //todo: registrationNumber Validation.\n    });\n  }\n\n  address(): FormGroup{\n    return this.formBuilder.group({\n      addressLine1: ['', [\n        Validators.required, Validators.maxLength(2000)\n      ]],\n      addressLine2: ['', [\n        Validators.maxLength(2000)\n      ]],\n      state: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      city: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      pincode: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\n      ]]\n    });\n  }\n\n  authorisedPerson(): FormGroup{\n    return this.formBuilder.group({\n      name: ['',[\n        Validators.required, Validators.maxLength(200)\n      ]],\n      contact1: ['', [\n        Validators.required, Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n      ]],\n      contact2: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n      ]],\n      email1: ['', [\n        Validators.email, Validators.maxLength(50)\n      ]],\n      email2: ['', [\n        Validators.email, Validators.maxLength(50)\n      ]]\n    });\n  }\n\n  getAuthorisedPersons(): FormArray{\n    return this.myForm.get('authorisedPersons') as FormArray;\n  }\n\n  addAuthorisedPerson():void{\n    if(this.numberOfAuthorisedPersons<5){\n      (this.getAuthorisedPersons()).push(this.authorisedPerson());\n      this.numberOfAuthorisedPersons=this.getAuthorisedPersons().length;\n      //this.activateTab(this.numberOfAuthorisedPersons);\n    }\n  }\n\n  removeAuthorisedPerson(index): void{\n    if(this.numberOfAuthorisedPersons>1){\n      (this.getAuthorisedPersons()).removeAt(index);\n      this.numberOfAuthorisedPersons=this.getAuthorisedPersons().length;\n      this.selectedTab=this.numberOfAuthorisedPersons-1;\n    }\n  }\n\n  getNumberOfAuthorisedPersons(): Number{\n    return this.numberOfAuthorisedPersons;\n  }\n\n  isMaxLimitReached(val):boolean{\n    return this.numberOfAuthorisedPersons>=val;\n  }\n\n  getArray(val): number[]{\n    return Array(val);\n  }\n\n  activateTab(val): void{\n      this.selectedTab=val-1;\n  }\n\n  onSubmit(){\n    let json= Object.assign({authorizedPerson:this.getAuthorisedPersons().value}, this.myForm.get('basicInfo').value, this.myForm.get('address').value);\n    console.log('submitting: ',json);\n    this.apiService.postData(json,'partnerngo');\n    //To test only\n    // this.apiService.getData('partnerngo');\n  }\n}\n","module.exports = \"#mainDiv\\n{\\n  height: 100%;\\n  width:70%;\\n  margin:auto;\\n}\\n\\n#heading\\n{\\n  height: 50px;\\n  width: 100%;\\n  /*padding-left: 35%;*/\\n  /*margin: auto;*/\\n  font-size: 25px;\\n  margin-top: 50px;\\n  background-color: silver;\\n}\\n\\n#buttonTab\\n{\\n  paing-left:10%;\\n}\\n\\n#buttonCancel\\n{\\nmargin-left: 30%;\\n}\\n\\n#buttonSubmit\\n{\\n  margin-left: 4%;\\n}\\n\\n#backButton\\n{\\n  width:30%;\\n  float:left;\\n}\\n\\n#headingText\\n{\\n  width:70%;\\n  float:left\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmQtbWFpbC9zZW5kLW1haWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxZQUFZO0VBQ1osU0FBUztFQUNULFdBQVc7QUFDYjs7QUFFQTs7RUFFRSxZQUFZO0VBQ1osV0FBVztFQUNYLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQix3QkFBd0I7QUFDMUI7O0FBQ0E7O0VBRUUsY0FBYztBQUNoQjs7QUFDQTs7QUFFQSxnQkFBZ0I7QUFDaEI7O0FBQ0E7O0VBRUUsZUFBZTtBQUNqQjs7QUFDQTs7RUFFRSxTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUNBOztFQUVFLFNBQVM7RUFDVDtBQUNGIiwiZmlsZSI6InNlbmQtbWFpbC9zZW5kLW1haWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtYWluRGl2XG57XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6NzAlO1xuICBtYXJnaW46YXV0bztcbn1cblxuI2hlYWRpbmdcbntcbiAgaGVpZ2h0OiA1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgLypwYWRkaW5nLWxlZnQ6IDM1JTsqL1xuICAvKm1hcmdpbjogYXV0bzsqL1xuICBmb250LXNpemU6IDI1cHg7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHNpbHZlcjtcbn1cbiNidXR0b25UYWJcbntcbiAgcGFpbmctbGVmdDoxMCU7XG59XG4jYnV0dG9uQ2FuY2VsXG57XG5tYXJnaW4tbGVmdDogMzAlO1xufVxuI2J1dHRvblN1Ym1pdFxue1xuICBtYXJnaW4tbGVmdDogNCU7XG59XG4jYmFja0J1dHRvblxue1xuICB3aWR0aDozMCU7XG4gIGZsb2F0OmxlZnQ7XG59XG4jaGVhZGluZ1RleHRcbntcbiAgd2lkdGg6NzAlO1xuICBmbG9hdDpsZWZ0XG59XG4iXX0= */\"","module.exports = \"<!--<div class=\\\"row custom-row\\\" id=\\\"mainDiv\\\">-->\\n  <!--<div class= \\\"col-sm-5 custom-container jumbotron\\\">-->\\n    <!--<form class=\\\"form-horizontal\\\"  #sendmailForm=\\\"ngForm\\\"-->\\n          <!--(ngSubmit)=\\\"onFormSubmit(sendmailForm)\\\" >-->\\n      <!--<fieldset>-->\\n        <!--<legend>SignUp</legend>-->\\n\\n        <!--&lt;!&ndash;- To Block -&ndash;&gt;-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"toEmail\\\">to</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"toEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.to\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"to\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"to\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#emailTo = \\\"ngModel\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>&ndash;&gt;-->\\n        <!--</div>-->\\n        <!---->\\n\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"ccEmail\\\">cc</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"ccEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.cc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"cc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#emailCc = \\\"ngModel\\\"&ndash;&gt;-->\\n\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"cc\\\">&ndash;&gt;-->\\n        <!--</div>-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"bccEmail\\\">bcc</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"bccEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.bcc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"bcc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#emailBcc = \\\"ngModel\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"bcc\\\" >&ndash;&gt;-->\\n        <!--</div>-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"subjectEmail\\\">Subject</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"subjectEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.subject\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"subject\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"subject\\\" required>&ndash;&gt;-->\\n        <!--</div>-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"textEmail\\\">Text</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"textEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#pwd = \\\"ngModel\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;minlength=\\\"8\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;required>&ndash;&gt;-->\\n        <!--</div>-->\\n\\n\\n        <!--&lt;!&ndash;- Buttons Block -&ndash;&gt;-->\\n\\n      <!--</fieldset>-->\\n    <!--</form>-->\\n    <!--{{email | json}}-->\\n  <!--</div>-->\\n  <div id=\\\"heading\\\">\\n    <div id=\\\"backButton\\\">\\n      <a [routerLink]=\\\"['/events']\\\">Back to Events</a>\\n    </div>\\n    <div id=\\\"headingText\\\">\\n    Enter Email Details\\n    </div>\\n  </div>\\n  <div id=\\\"mainDiv\\\">\\n    <form class=\\\"form-horizontal\\\"  #sendmailForm=\\\"ngForm\\\"\\n          (ngSubmit)=\\\"onFormSubmit(sendmailForm)\\\" >\\n    <table class=\\\"table-condensed form-table\\\">\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">To</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"toEmail\\\"\\n                   [(ngModel)]=\\\"email.to\\\"\\n                   name=\\\"to\\\"\\n                   placeholder=\\\"to\\\"\\n                   #emailTo = \\\"ngModel\\\"\\n                   pattern=\\\"([a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3},?)*$\\\"\\n                   class=\\\"form-control well well-sm\\\" required>\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"emailTo.invalid && (emailTo.dirty || emailTo.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <div *ngIf = \\\"emailTo.errors?.required\\\">\\n                Email field can't be blank\\n              </div>\\n              <div *ngIf = \\\"emailTo.errors?.dirty\\\">\\n                Enter in correct Format\\n              </div>\\n              <div *ngIf = \\\"emailTo.errors?.pattern && emailTo.touched\\\">\\n                The email id doesn't seem right\\n              </div>\\n            </div>\\n          </div>\\n        </td>\\n      </tr>\\n\\n\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Cc</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"ccEmail\\\"\\n                   [(ngModel)]=\\\"email.cc\\\"\\n                   name=\\\"cc\\\"\\n                   #emailCc = \\\"ngModel\\\"\\n                   pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                   placeholder=\\\"cc\\\"\\n                   class=\\\"form-control well well-sm\\\">\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"emailCc.invalid && (emailCc.dirty || emailCc.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <div *ngIf = \\\"emailCc.errors?.required\\\">\\n                Email field can't be blank\\n              </div>\\n              <div *ngIf = \\\"emailCc.errors?.dirty\\\">\\n                Enter in correct Format\\n              </div>\\n              <div *ngIf = \\\"emailCc.errors?.pattern && emailCc.touched\\\">\\n                The email id doesn't seem right\\n              </div>\\n            </div>\\n          </div>\\n        </td>\\n      </tr>\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Bcc</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"bccEmail\\\"\\n                   [(ngModel)]=\\\"email.bcc\\\"\\n                   name=\\\"bcc\\\"\\n                   #emailBcc = \\\"ngModel\\\"\\n                   pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3},?$\\\"\\n                   placeholder=\\\"bcc\\\"\\n                   class=\\\"form-control well well-sm\\\">\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"emailBcc.invalid && (emailBcc.dirty || emailBcc.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <div *ngIf = \\\"emailBcc.errors?.required\\\">\\n                Email field can't be blank\\n              </div>\\n              <div *ngIf = \\\"emailBcc.errors?.dirty\\\">\\n                Enter in correct Format\\n              </div>\\n              <div *ngIf = \\\"emailBcc.errors?.pattern && emailBcc.touched\\\">\\n                The email id doesn't seem right\\n              </div>\\n            </div>\\n          </div>\\n        </td>\\n      </tr>\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-2 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n\\n            <label class=\\\"control-label\\\" for=\\\"subjectEmail\\\">Subject</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"subjectEmail\\\"\\n                   [(ngModel)]=\\\"email.subject\\\"\\n                   name=\\\"subject\\\"\\n                   placeholder=\\\"subject\\\"\\n                   class=\\\"form-control well well-sm\\\"\\n                   required>\\n          </div>\\n        </td>\\n      </tr>\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-2 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n\\n            <label class=\\\"control-label\\\" for=\\\"subjectEmail\\\">Text</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"textEmail\\\"\\n                   [(ngModel)]=\\\"email.text\\\"\\n                   name=\\\"text\\\"\\n                   placeholder=\\\"text\\\"\\n                   #pwd = \\\"ngModel\\\"\\n                   minlength=\\\"8\\\"\\n                   class=\\\"form-control well well-sm\\\"\\n                   required>\\n          </div>\\n        </td>\\n      </tr>\\n    </table>\\n    <div class=\\\"form-group\\\" id=\\\"buttonTab\\\">\\n      <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" id=\\\"buttonCancel\\\" >Cancel</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n              [disabled]=\\\"!sendmailForm.form.valid\\\" id=\\\"buttonSubmit\\\">Submit</button>\\n    </div>\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Email} from \"../Email\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {ApiService} from \"../api.service\";\nimport {ApiServiceMail} from \"../api.service.mail\";\n\n@Component({\n  selector: 'app-send-mail',\n  templateUrl: './send-mail.component.html',\n  styleUrls: ['./send-mail.component.css']\n})\nexport class SendMailComponent implements OnInit {\n  public email:Email;\n  constructor(\n              private apiServiceMail: ApiServiceMail) { }\n  ngOnInit() {\n    this.email= new Email({to:\"rainatushar221995@gmail.com,random1@gmail.com\",cc:\"\",bcc:\"\",subject:\"\",text:\"\"});\n  }\n  public onFormSubmit({value}:{value:Email}) {\n    console.log(value);\n    this.apiServiceMail.postData(this.email,\"String\");\n  }\n  // {to:\"to\",cc:\"cc\",bcc:\"bcc\",subject:\"subject\",text:\"text\"}\n}\n","module.exports = \"/*\\n.text-on-pannel {\\n  background: #fff none repeat scroll 0 0;\\n  height: auto;\\n  margin-left: 20px;\\n  padding: 3px 5px;\\n  position: absolute;\\n  margin-top: -20px;\\n  border: 1px solid #337ab7;\\n  border-radius: 8px;\\n}\\n\\n.panel {\\n\\n  margin-top: 27px !important;\\n}\\n\\n.panel-body {\\n  padding-top: 30px !important;\\n}\\n*/\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZvbHVudGVlci92b2x1bnRlZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQkMiLCJmaWxlIjoidm9sdW50ZWVyL3ZvbHVudGVlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbi50ZXh0LW9uLXBhbm5lbCB7XG4gIGJhY2tncm91bmQ6ICNmZmYgbm9uZSByZXBlYXQgc2Nyb2xsIDAgMDtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgcGFkZGluZzogM3B4IDVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJnaW4tdG9wOiAtMjBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzMzN2FiNztcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuXG4ucGFuZWwge1xuXG4gIG1hcmdpbi10b3A6IDI3cHggIWltcG9ydGFudDtcbn1cblxuLnBhbmVsLWJvZHkge1xuICBwYWRkaW5nLXRvcDogMzBweCAhaW1wb3J0YW50O1xufVxuKi9cbiJdfQ== */\"","module.exports = \"\\n<div class=\\\"container\\\" >\\n  <div class=\\\"page-header well well-sm text-center\\\">\\n    <h3><strong> Volunteer Registration</strong></h3>\\n  </div>\\n  <div class=\\\"panel panel-info\\\" >\\n   <!-- <fieldset>\\n\\n    <legend>Personal Details</legend>-->\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Personal Information</strong></h3>-->\\n  <div class=\\\"panel-heading\\\">\\n    <label>Personal Information</label>\\n  </div>\\n  <div class=\\\"panel-body\\\" >\\n    <form #form=\\\"ngForm\\\" [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"personalInfo()\\\">\\n    <div  formGroupName=\\\"personalInfo\\\">\\n\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">First Name</label>\\n              <input type=\\\"text\\\" formControlName = \\\"firstName\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Last Name</label>\\n              <input type=\\\"text\\\" formControlName = \\\"lastName\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Phone Number</label>\\n              <input type=\\\"text\\\" formControlName = \\\"phonePrefix\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\"></label>\\n              <input type=\\\"text\\\" formControlName = \\\"phoneNumber\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Alternate Phone</label>\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhonePrefix\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\"></label>\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhoneNumber\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Email</label>\\n              <input type=\\\"text\\\" formControlName = \\\"email\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Alternate Email</label>\\n              <input type=\\\"text\\\" formControlName = \\\"alternateEmail\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n    </div>\\n    </form>\\n  </div>\\n    <!--</fieldset>-->\\n  </div>\\n\\n  <div class=\\\"panel panel-primary\\\">\\n    <!--<fieldset>\\n\\n      <legend>Address</legend>-->\\n\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Address</strong></h3>-->\\n    <div class=\\\"panel-heading\\\">\\n      <label>Address</label>\\n    </div>\\n      <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"myForm\\\" >\\n        <div formGroupName=\\\"address\\\">\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Locality</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"locality\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">City</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">State</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group col-md-10\\\">\\n                  <label class=\\\"control-label\\\">Pin Code</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n        </div>\\n        </form>\\n      </div>\\n   <!-- </fieldset>-->\\n  </div>\\n  <div class=\\\"panel panel-info\\\">\\n    <!--<fieldset>\\n\\n      <legend>Additional Information</legend>-->\\n   <!-- <h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Additional Information </strong></h3>-->\\n      <div class=\\\"panel-heading\\\">\\n        <label>Additional Information</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <form #form=\\\"ngForm\\\" [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"additionalInfo()\\\">\\n        <div formGroupName=\\\"additionalInfo\\\">\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Interest Areas</label>\\n                  <textarea formControlName = \\\"interestedAreas\\\" rows=\\\"2\\\" cols=\\\"50\\\" class=\\\"form-control well well-sm\\\"></textarea>\\n                </div>\\n              </div>\\n\\n            </div>\\n\\n\\n\\n\\n        </div>\\n\\n        </form>\\n\\n      </div>\\n    <!--</fieldset>-->\\n  </div>\\n  <div class=\\\"text-center\\\">\\n  <button  class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\">Register</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit,Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup,FormControl, Validators,FormArray } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service'\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.component.html',\n  styleUrls: ['./volunteer.component.css']\n})\nexport class VolunteerComponent implements OnInit {\n\n  myForm: FormGroup;\n\n\n\n    constructor(private formBuilder: FormBuilder,\n                private apiService:ApiService) { }\n\n    ngOnInit() {\n\n        this.myForm = this.formBuilder.group({\n          personalInfo: this.personalInfo(),\n          address: this.address(),\n          additionalInfo:this.additionalInfo()\n        });\n    }\n\n    personalInfo(): FormGroup{\n\n      const aboutVolunteer= this.formBuilder.group({\n         firstName: ['',[\n                  Validators.required, Validators.maxLength(50)\n                ]],\n                lastName: ['',[\n                                     Validators.required, Validators.maxLength(50)\n                                   ]],\n\n                phoneNumber: ['', [\n                  Validators.required, Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n                ]],\n                alternatePhoneNumber: ['', [\n                  Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n                ]],\n                phonePrefix:['',[]],\n                alternatePhonePrefix:['',[]],\n                email: ['', [\n                  Validators.email, Validators.maxLength(50)\n                ]],\n               alternateEmail: ['', [\n                  Validators.email, Validators.maxLength(50)\n                ]]\n      });\n      return aboutVolunteer;\n    }\n\n    address(): FormGroup{\n\n      const address = this.formBuilder.group({\n        locality: ['', [\n          Validators.required, Validators.maxLength(2000)\n        ]],\n        state: ['', [\n          Validators.required, Validators.maxLength(50)\n        ]],\n        city: ['', [\n          Validators.required, Validators.maxLength(50)\n        ]],\n        pincode: ['', [\n          Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\n        ]]\n      });\n      return address;\n    }\n    additionalInfo(): FormGroup{\n           let me=this;\n           const additionalInfo = this.formBuilder.group({\n             interestedAreas: ['', [\n               Validators.maxLength(2000)\n             ]],\n\n           });\n           return additionalInfo;\n         }\n\n    onSubmit(){console.log(\"Insubmit\");console.log(this.address);if (this.myForm.valid) {\n                                                   console.log(\"valid\");\n                                                   let json= Object.assign(this.myForm.get('personalInfo').value, this.myForm.get('address').value);\n                                                       console.log('submitting: ',json);\n                                                       this.apiService.postData(json,'volunteer-create');\n\n                                                       // this.apiService.getData('partnerngo');\n                                               }\n                                               else{console.log(\"invalid\");}console.log(\"address is\"+this.myForm.valid);\n}\n\n\n    fx(val){\n      console.log(val);\n    }\n\n  }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3ZWxjb21lL3dlbGNvbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  Welcome to Youth For Seva\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export const environment = {\n  production: true,\n  serverHost:'.'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverHost:'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}